"""
Django settings for traffic_main project.

Generated by 'django-admin startproject' using Django 5.2.3.
"""

from pathlib import Path
import environ
import os

# 初始化環境變量
env = environ.Env()

# 設置 TensorFlow 日誌級別
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '3'

# 正確獲取 BASE_DIR
BASE_DIR = Path(__file__).resolve().parent.parent

# 讀取環境變量文件
env.read_env(os.path.join(BASE_DIR, '.env'))

# 安全密鑰設置
SECRET_KEY = env("DJANGO_SECRET_KEY", default="unsafe-default")

# 調試模式設置
DEBUG = env.bool("DEBUG", default=True)

# 允許的主機設置（添加默認值）
ALLOWED_HOSTS = env.list("ALLOWED_HOSTS", default=["traffic-backend-ejsn.onrender.com"])

# 應用定義
INSTALLED_APPS = [
    "corsheaders",
    "traffic_signal.apps.TrafficSignalConfig",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

# 中間件設置
MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "traffic_main.urls"

# 模板設置
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "traffic_main.wsgi.application"

# 數據庫配置
DATABASES = {
    "default": {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': env('DB_NAME'),
        'USER': env('DB_USER'),
        'PASSWORD': env('DB_PASSWORD'),
        'HOST': env('DB_HOST', default='localhost'),
        'PORT': env('DB_PORT', default='3306'),
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
            'charset': 'utf8mb4',
        },
    }
}

# 密碼驗證
AUTH_PASSWORD_VALIDATORS = [
    {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"},
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

# 國際化設置
LANGUAGE_CODE = 'zh-hant'
TIME_ZONE = 'Asia/Taipei'
USE_I18N = True
USE_TZ = True

# 靜態文件設置
STATIC_URL = "/static/"
STATICFILES_DIRS = []
STATIC_ROOT = BASE_DIR / 'staticfiles'

# 默認主鍵字段
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# CORS設置
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True

# 安全設置
SECURE_HSTS_SECONDS = 31536000  # 1年
SECURE_SSL_REDIRECT = True
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True

# TensorFlow 內存優化
try:
    import tensorflow as tf

    # 配置GPU內存增長（如果可用）
    gpus = tf.config.list_physical_devices('GPU')
    if gpus:
        tf.config.experimental.set_memory_growth(gpus[0], True)

    # CPU優化配置
    tf.config.threading.set_inter_op_parallelism_threads(2)
    tf.config.threading.set_intra_op_parallelism_threads(2)
except ImportError:
    pass

# 確保在Render環境使用正確的設置
if os.environ.get('RENDER'):
    DEBUG = False
    SECURE_SSL_REDIRECT = True
